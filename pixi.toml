[project]
channels = ["conda-forge", "bioconda"]
name = "IFN-resource"
platforms = ["linux-64"]

[environments]
default = ["python", "R"]
rust = ["rust"]
nextflow = ["nextflow"]

####################################################################################################
# Nextflow: data preprocessing
####################################################################################################
[feature.nextflow.dependencies]
nextflow = "==24.10.5"
samtools = "==1.22"
tabix = "==1.11"
star = "==2.7.11b"
salmon = "==1.10.3"
gffread = "==0.12.7"

[feature.nextflow.tasks."setup/download-gencode"]
cmd = "bash download-gencode.sh $VERSION $ASSEMBLIES"
env = { VERSION = "48", ASSEMBLIES = "$PIXI_PROJECT_ROOT/assemblies" }
cwd = "setup"

[feature.nextflow.tasks."setup/download-fastq"]
cmd = [
    # Run nf-core/fetchngs to download FASTQ files
    "nextflow", "run", "-resume", "-profile", "singularity", "-r", "7544cb9297a0db754120bd1cb8d7df4586a60610",
    "nf-core/fetchngs", "--input", "id.csv", "--outdir", "results", "&&",
    # Save FASTQ files and discard Nextflow files
    "mv", "results/fastq/*.gz", ".", "&&",
    "rm", "-rf", ".nextflow", ".nextflow.log", "results", "work"
]
cwd = "stories/nextflow/fastq"

[feature.nextflow.tasks]
"nextflow/full" = { cmd = [
    "nextflow", "run", "-c", "resources/nextflow.config", "-params-file", "resources/full-annotation.yaml",
    "-resume", "-profile", "slurm,latency", "-r", "bc8cab3184011fd6903afddf0da731681eb3a942", "alnfedorov/rnaseq"
], cwd = "stories/nextflow" }
"nextflow/filtered" = { cmd = [
    "nextflow", "run", "-c", "resources/nextflow.config", "-params-file", "resources/filtered-annotation.yaml",
    "-resume", "-profile", "slurm,latency", "-r", "bc8cab3184011fd6903afddf0da731681eb3a942", "alnfedorov/rnaseq"
], cwd = "stories/nextflow" }

########################################################################################################################
# Rust: for building the latest version of Terminus
########################################################################################################################
[feature.rust.dependencies]
rust = "==1.87.0"
gsl = "==2.8"
pkg-config = "*"

[feature.rust.tasks."setup/terminus"]
cmd = [
    "cargo", "install", "--git", "https://github.com/COMBINE-lab/terminus",
    "--rev", "54c904eee9a5793738740e2cb5533dfc36f3c5c0",
    "--root", "$PIXI_PROJECT_ROOT/stories/terminus/ld",
    "--force"
]
env = { "LD_LIBRARY_PATH" = "$CONDA_PREFIX/lib:$LD_LIBRARY_PATH", "PKG_CONFIG_PATH" = "$CONDA_PREFIX/lib/pkgconfig" }

####################################################################################################
# Python: bioinformatics stories
####################################################################################################
[feature.python.dependencies]
python-freethreading = "==3.13.3"
pixi-pycharm = "*"
tabix = "==1.11"
rust = "==1.87.0" # Required for building gseapy

# Python dependecies must be managed only using pip to allow rebuilding wheels for 3.13t
[feature.python.pypi-dependencies]
attrs = ">=25.1.0, <26"
tqdm = ">=4.67.1, <5"
biobit = "==0.0.8"
ipython = ">=9.3.0, <10"
joblib = ">=1.5.1, <2"
pandas = { url = "https://pypi.anaconda.org/scientific-python-nightly-wheels/simple/pandas/3.0.0.dev0+2217.g7c2796d134/pandas-3.0.0.dev0+2217.g7c2796d134-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl" }
matplotlib = ">=3.10.2, <4"
seaborn = ">=0.13.2, <0.14"
scikit-learn = ">=1.6.1, <2"
pybigwig = ">=0.3.24, <0.4" # requires gcc: apt install build-essential zlib1-dev
gseapy = "==1.1.9"

[feature.python.activation]
env = { PYTHONPATH = "$PIXI_PROJECT_ROOT" }

[feature.python.tasks]
# Setup
"setup/parse-gencode" = { cmd = [
    "python", "make-annotome-index.py", "&&",
    "python", "make-nextflow-gtf.py", "&&",
    "gunzip", "-k", "-f", "$PIXI_PROJECT_ROOT/stories/nextflow/resources/sequence.fa.gz"
], cwd = "setup" }
"setup/filter-gencode" = { cmd = [
    "python", "filter-nextflow-gtf.py"
], cwd = "setup" }
# Stories
"stories/terminus" = { cmd = [
    "bash", "terminus.sh", "&&",
    "python", "tx2group.py", "&&",
    "python", "group2gene.py", "&&",
    "python", "make-summary-tables.py"
], cwd = "stories/terminus" }
"stories/DE" = { cmd = [
    "python", "deseq2.py", "&&",
    "python", "summarize.py", "&&",
    "python", "volcano-plot.py", "&&",
    "python", "ifnb-volcano-plot.py", "&&",
    "python", "tpms-barplot.py", "&&",
    "python", "heatmaps.py", "&&",
    "python", "gsea.py", "&&",
    "python", "supplementary-tables.py", "&&",
    "python", "prepare-iSEE-files.py"
], cwd = "stories/DE" }
"stories/cCRE" = { cmd = [
    "python", "match-to-transcripts.py", "&&",
    "python", "derive-sequences.py"
], cwd = "stories/cCRE" }
"stories/STREME" = { cmd = [
    "python", "derive-tags.py", "&&",
    "python", "prepare-comparisons.py", "&&",
    "sbatch", "--export=SLURM_MPI_TYPE=pmix", "run-streme.sh",
    #    "&&", "python", "summarize-results.py"
], cwd = "stories/STREME" }
"stories/JASPAR/scoring" = { cmd = [
    "python", "parse-jaspar-clusters.py", "&&",
    "python", "score-promoters.py", "&&",
    "python", "calculate-responses.py"
], cwd = "stories/JASPAR/scoring" }
"stories/JASPAR/association" = { cmd = [
    "python", "summarize_txgroups.py", "&&",
    "python", "calculate-significance.py", "&&",
    "python", "plot-scores-distribution.py", "&&",
    "python", "plot-pairwise-summary.py"
], cwd = "stories/JASPAR/association" }

#####################################################################################################
## R: differential expression analysis
#####################################################################################################
[feature.R.dependencies]
r-base = "==4.4.3"
bioconductor-deseq2 = "==1.46.0"
bioconductor-apeglm = "==1.28.0"
bioconductor-tximport = "==1.34.0"
bioconductor-summarizedexperiment = "==1.36.0"
bioconductor-isee = "==2.18.0"
